---
<%
domain_name = node[:cf] && node[:cf][:domain] || "vcap.me"
%>
deployment: micro
properties:
  micro: true
  domain: <%= domain_name %>
  
  cc_props: cc
  hm_props: health_manager_ccng
  
  env:
  <% if node[:proxy] %>
    <% if node[:proxy][:http_proxy] %>http_proxy: "<%= node[:proxy][:http_proxy] %>"<% end %>
    <% if node[:proxy][:https_proxy] %>https_proxy: "<%= node[:proxy][:https_proxy] %>"<% end %>
    <% if node[:proxy][:no_proxy] %>no_proxy: "<%= node[:proxy][:no_proxy] %>"<% end %>
  <% end %>
    
  networks:
    apps: default
    management: default
  
  nats:
    user: nats
    password: nats
    address: 127.0.0.1
    port: 4222

  database: &database
    db_scheme: postgresql
    address: 127.0.0.1
    port: 5432
    roles:
    - tag: admin
      name: alladmin
      password: aaaBauWauZZb2
    databases:
    - tag: cc
      name: ccdb
    - tag: cc_ng
      name: ccdb_ng
      citext: true
    - tag: uaa
      name: uaadb

  db: database
  ccdb: *database
  uaadb: *database
  ccdb_ng:
    db_scheme: postgres
    address: 127.0.0.1
    port: 5432
    roles:
    - tag: admin
      name: alladmin
      password: aaaBauWauZZb2
    databases:
    - tag: cc
      name: ccdb_ng
      citext: true
  
  ccng: &ccng
  	use_nginx: false
    default_quota_definition: free
    srv_api_uri: http://api.<%= domain_name %>
    logging_level: debug
    bulk_api_password: bulk_api_password
    staging_upload_user: staging
    staging_upload_password: staging
    external_host: api
    uaa_resource_id: cloud_controller
    quota_definitions:
      free:
        total_services: 10                     
        memory_limit: 1024
        non_basic_services_allowed: false   
        paid_memory_limit: 0               
      paid:
        memory_limit: 204800
        non_basic_services_allowed: true
        total_services: 32
      yeti:
        total_services: 500 
        memory_limit: 204800
        non_basic_services_allowed: true    
    bootstrap_admin_email: 'micro@vcap.me'
    packages:
      fog_connection:
        provider: Local
        local_root: /var/vcap/shared
      app_package_directory_key: cc-packages
    droplets:
      fog_connection:
        provider: Local
        local_root: /var/vcap/shared
      droplet_directory_key: cc-droplets
    resource_pool:
      minimum_size: 0
      maximum_size: 536870912
      resource_directory_key: cc-resources
      fog_connection:
        provider: Local
        local_root: /var/vcap/shared
    # admins:

  cc: *ccng
  
  login:
    enabled: false
  
  vcap_redis:
    address: 127.0.0.1
    port: 3456
    password:
    maxmemory: 500000000
  
  health_manager_ccng:
    shadow_mode: disable
    cc_partition: ng
    
  dea:
    max_memory: 1024

  dea_next:
    memory_mb: 8192
    memory_overcommit_factor: 4
    disk_mb: 16384
    disk_overcommit_factor: 4
    num_instances: 256
  
  router:
    trace_key: 22 # FIXME nise_bosh need support default property value from spec.
    offset: 0 # FIXME nise_bosh need support default property value from spec.
    client_inactivity_timeout: 600
    app_inactivity_timeout: 600
    local_route: 127.0.0.1
    status:
      port: 8080
      user:
      password:
  
  mysql_gateway:
    ip_route: 127.0.0.1
    token:
    supported_versions: ["5.5"]
    version_aliases:
      current: "5.5"
    default_plan: "100"
  mysql_node:
    ip_route: 127.0.0.1
    available_storage: 2048
    password:
    max_db_size: 256
    supported_versions: ["5.5"]
    default_version: "5.5"
    max_tmp: 1024

  serialization_data_server:
    upload_token: token
    use_nginx: false
    upload_timeout: 10
    port: 8090
    upload_file_expire_time: 600
    purge_expired_interval: 30
  service_lifecycle:
    download_url: 127.0.0.1
    mount_point: /var/vcap/service_lifecycle
    tmp_dir: /var/vcap/service_lifecycle/tmp_dir
    resque:
      host: 127.0.0.1
      port: 3456
      password:
    nfs_server:
      address: 127.0.0.1
      export_dir: /cfsnapshot
    serialization_data_server:
    - 127.0.0.1
  stager:
    max_staging_duration: 120
    max_active_tasks: 20
    queues:
    - staging
  
  plan: "100"
  service_plans:
    mysql:
      "100":
        description: "Shared server, shared VM, 1MB memory, 10MB storage, 10 connections"
        free: true
        job_management:
          high_water: 450
          low_water: 50
        configuration:
          capacity: 500
          max_db_size: 10
          key_buffer: 512
          innodb_buffer_pool_size: 512
          max_allowed_packet: 16
          thread_cache_size: 128
          query_cache_size: 128
          max_long_query: 3
          max_long_tx: 30
          max_clients: 10
          max_connections: 1000
          table_open_cache: 2000
          innodb_tables_per_database: 50
          connection_pool_size:
            min: 5
            max: 10
          backup:
            enable: true
          lifecycle:
            enable: true
            serialization: enable
            snapshot:
              quota: 1
            worker_count: 5
          warden:
            enable: false
  
  uaa:
    spring_profiles: postgresql
    no_ssl: true
    jwt: 
      verification_key: false
    cc:
      token_secret: cc_token
      client_secret: cc_token_secret
    client:
      autoapprove:
        - cf
        - vmc
        - my
        - micro
        - support-signon
        - appdirect
        - dashboard
        - portal
        - service_admin
    admin:
      client_secret: admin
    login:
      client_secret: login
    batch:
      username: batch
      password: batch
    port: 8100
    catalina_opts: -Xmx128m -Xms30m -XX:MaxPermSize=128m
    scim:
      users:
        - micro@vcap.me|micro|scim.write,scim.read,openid
    clients:
      dashboard:
        id: dashboard
        secret: dashboard-password
        scope: openid,dashboard.user
        authorities: uaa.admin,uaa.resource,tokens.read,scim.read,scim.write
        authorized-grant-types: client_credentials,authorization_code,refresh_token
      service_admin:
        id: service_admin
        authorized-grant-types: implicit
        authorities: uaa.none
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write
      vmc:
        override: true
        authorized-grant-types: implicit
        authorities: uaa.none
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write
      cf:
        override: true
        authorized-grant-types: implicit
        authorities: uaa.none
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write
    
